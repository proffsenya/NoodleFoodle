import React, { useState } from "react";
import Footer from "../components/Footer";
import Header from "../components/Header";

export default function Profile() {
  const [username, setUsername] = useState("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å");
  const [avatar, setAvatar] = useState(null);
  const [isEditing, setIsEditing] = useState(false);
  const [aboutMe, setAboutMe] = useState({
    location: "",
    website: "",
    bio: "",
    travelTips: "",
  });

  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  const userInfo = {
    email: "user@example.com",
    registrationDate: "2023-01-01",
    loyaltyPoints: 150,
    orderHistory: [
      { id: 1, date: "2023-02-01", total: "$50", items: ["–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å", "–°—Ç–µ–π–∫"] },
      { id: 2, date: "2023-03-15", total: "$75", items: ["–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞", "–¢–∏—Ä–∞–º–∏—Å—É"] },
    ],
    savedRecipes: [
      { id: 1, name: "–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å", ingredients: ["–ö—É—Ä–∏—Ü–∞", "–°–∞–ª–∞—Ç", "–°—É—Ö–∞—Ä–∏–∫–∏", "–°–æ—É—Å"] },
      { id: 2, name: "–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞", ingredients: ["–ü–∞—Å—Ç–∞", "–ë–µ–∫–æ–Ω", "–°—ã—Ä", "–Ø–π—Ü–æ"] },
    ],
    personalizedGifts: ["–°–∫–∏–¥–∫–∞ 10% –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–∫–∞–∑"],
    promoCodes: ["WELCOME10", "SUMMER20"],
  };

  const handleAvatarChange = (event) => {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setAvatar(reader.result);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSave = () => {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    setIsEditing(false);
    alert("–ü—Ä–æ—Ñ–∏–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setAboutMe((prevAboutMe) => ({
      ...prevAboutMe,
      [name]: value,
    }));
  };

  return (
    <div className="min-h-screen bg-white flex flex-col">
      <Header />
      <div className="flex-grow flex justify-center items-start p-10">
        <div className="w-full max-w-6xl flex flex-row space-x-10 bg-white bg-opacity-90 rounded-xl shadow-lg p-8">
          {/* Left Column: Profile and Editing Section */}
          <div className="w-1/3 p-4 bg-gray-50 rounded-lg flex flex-col items-center">
            <h1 className="mb-4 text-2xl font-bold text-gray-800 text-center">–ü—Ä–æ—Ñ–∏–ª—å</h1>
            <div className="mb-4 flex justify-center">
              {avatar ? (
                <img
                  src={avatar}
                  alt="–ê–≤–∞—Ç–∞—Ä"
                  className="w-40 h-40 rounded-full object-cover"
                />
              ) : (
                <div className="w-40 h-40 rounded-full bg-gray-200 flex items-center justify-center text-gray-400 text-5xl">
                  üë§
                </div>
              )}
            </div>
            {isEditing && (
              <input
                type="file"
                accept="image/*"
                onChange={handleAvatarChange}
                className="mb-4"
              />
            )}
            <div className="mb-4 w-full">
              {isEditing ? (
                <input
                  type="text"
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  className="w-full px-3 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
              ) : (
                <p className="text-lg text-gray-700 text-center">{username}</p>
              )}
            </div>
            {isEditing ? (
              <button
                onClick={handleSave}
                className="w-full px-4 py-2 bg-gray-800 text-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-500"
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
            ) : (
              <button
                onClick={() => setIsEditing(true)}
                className="w-full px-4 py-2 bg-gray-800 text-white rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-500"
              >
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </button>
            )}
          </div>

          {/* Right Column: Information Section */}
          <div className="w-2/3 p-4 bg-gray-50 rounded-lg flex flex-col space-y-6">
            <div>
              <h2 className="mb-4 text-2xl font-bold text-gray-800">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <p className="text-lg text-gray-700">
                <strong>Email:</strong> {userInfo.email}
              </p>
              <p className="text-lg text-gray-700">
                <strong>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</strong> {userInfo.registrationDate}
              </p>
              <p className="text-lg text-gray-700">
                <strong>–ë–∞–ª–ª—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏:</strong> {userInfo.loyaltyPoints}
              </p>
            </div>

            <div className="flex flex-col space-y-6">
              {/* –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ */}
              <div className="bg-white rounded-lg shadow-md p-6 flex-1">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h3>
                <ul className="list-disc list-inside">
                  {userInfo.orderHistory.map((order) => (
                    <li key={order.id} className="text-gray-700 mb-2">
                      <strong>{order.date}</strong> - {order.total}
                      <ul className="list-circle list-inside pl-5">
                        {order.items.map((item, index) => (
                          <li key={index}>{item}</li>
                        ))}
                      </ul>
                    </li>
                  ))}
                </ul>
              </div>

              {/* –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã */}
              <div className="bg-white rounded-lg shadow-md p-6 flex-1">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã</h3>
                <ul className="list-disc list-inside">
                  {userInfo.savedRecipes.map((recipe) => (
                    <li key={recipe.id} className="text-gray-700 mb-2">
                      <strong>{recipe.name}</strong>
                      <ul className="list-circle list-inside pl-5">
                        {recipe.ingredients.map((ingredient, index) => (
                          <li key={index}>{ingredient}</li>
                        ))}
                      </ul>
                    </li>
                  ))}
                </ul>
              </div>

              {/* –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏ */}
              <div className="bg-white rounded-lg shadow-md p-6 flex-1">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏</h3>
                <ul className="list-disc list-inside">
                  {userInfo.personalizedGifts.map((gift, index) => (
                    <li key={index} className="text-gray-700">
                      {gift}
                    </li>
                  ))}
                </ul>
              </div>

              {/* –ü—Ä–æ–º–æ–∫–æ–¥—ã */}
              <div className="bg-white rounded-lg shadow-md p-6 flex-1">
                <h3 className="text-xl font-semibold text-gray-800 mb-2">–ü—Ä–æ–º–æ–∫–æ–¥—ã</h3>
                <ul className="list-disc list-inside">
                  {userInfo.promoCodes.map((code, index) => (
                    <li key={index} className="text-gray-700">
                      {code}
                    </li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <Footer />
    </div>
  );
}